<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Embedded System Act</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
            background-color: antiquewhite;
        }
        .dht11.data {
            text-align: center;
            font-family: Arial, sans-serif;
            font-size: 24px;
            margin: 20px;
        }
        #tempHumidityChart {
            width: 100%;
            height: 480px;
            border: 1px solid;
            
        }
        
        p {
            margin: 0;
            padding: 0;
        }
        h2{
            align-items: center;
            text-align: center;
            background-color: darkgrey;
            font-size: 100px;
            font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif
        }
        .buttondht{
            display: flex;
            justify-content: center;
            text-align: center;
            font-size: 20px;
            height: 100vh; 
            padding: 30px;
        }
        .buttonstyle{
            font-family: 'Courier New', Courier, monospace;
            height: 5%;
            width: 300px;
            font-weight: bold;
            background-color: cadetblue;
            font-size: 20px;
        }
        .texthere{
            font-size: 30px;
            font-family: Arial, Helvetica, sans-serif;
        }
        .datahere{
            font-weight: bold;
            font-size: 32px;
        }
        .tabOption{
            background-color:aqua;
            align-items: center;
            display:grid;
            align-content: space-around;
            justify-content: center;
            box-sizing:border-box;
            width: 10%;
            height: 760px;
            border: 2px solid black;
            gap:10px
        }
        .acttab{
            border: 2px solid;
            width: 90%;
            height: 750px;
            padding: 3px;
        }
        .maintab{
            display:flex;
            justify-content: left;
            gap: 2px;

        }
        .optionbutton{
            font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
            height: 35px;
            width: 140px;
            font-size: 15px;
            border-radius: 0%;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h2>Bet Coder</h2>
    
    <div class="maintab">
        <div class="tabOption">
            <p style="text-align: center; font-size: 20px;"> Main Content</p>
            <button class="optionbutton">
                Acivity 1
            </button >
            <button class="optionbutton">
                Acivity 2
            </button>
            <button class="optionbutton">
                Acivity 3
            </button>
            <button class="optionbutton">
                Acivity 4
            </button>
            <button class="optionbutton">
                Acivity 5
            </button>
            <button class="optionbutton">
                Acivity 6
            </button>
            <button class="optionbutton">
                Acivity 7
            </button>
            <button class="optionbutton">
                Acivity 8
            </button>
            <button class="optionbutton">
                Acivity 9
            </button>
            <button class="optionbutton">
                Acivity 10
            </button>
            <button class="optionbutton">
                Members
            </button>
        </div>
        
        <div class="acttab">
            <div class="dht11.data">
                <h1 style="text-align: center; font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif"> Activity 1: Temperature & Humidity sensor with Webserver</h1>
                <p class="texthere">Temperature: <span id="temptext" class="datahere">--</span> <span id="tempUnit" class="datahere">C</span></p>
                <p class="texthere">Humidity: <span id="humiditytext" class="datahere">--</span> %</p>
            </div>
            <canvas id="tempHumidityChart"></canvas>
            <div class="buttondht">
                <button id="toggleUnitButton" class="buttonstyle">Switch to Fahrenheit</button>
            </div>
        </div>
    </div>

    <script>
        let tempHumidityChart;
        let temperatureUnit = 'C';

        function convertToFahrenheit(celsius) {
            return (celsius * 9/5) + 32;
        }

        function convertToKelvin(celsius) {
            return celsius + 273.15;
        }

        function fetchDataAndUpdateChart() {
            fetch('/dht_data')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    let tempCelsius = data.temperature;
                    let humidity = data.humidity;
                    let temp;

                    switch (temperatureUnit) {
                        case 'C':
                            temp = tempCelsius;
                            break;
                        case 'F':
                            temp = convertToFahrenheit(tempCelsius);
                            break;
                        case 'K':
                            temp = convertToKelvin(tempCelsius);
                            break;
                    }

                    document.getElementById('temptext').textContent = `${temp.toFixed(2)}`;
                    document.getElementById('tempUnit').textContent = temperatureUnit;
                    document.getElementById('humiditytext').textContent = `${humidity.toFixed(2)}`;

                    if (tempHumidityChart) {
                        tempHumidityChart.data.datasets[0].data.push(temp);
                        tempHumidityChart.data.datasets[1].data.push(humidity);

                        const maxDataPoints = 500;
                        if (tempHumidityChart.data.datasets[0].data.length > maxDataPoints) {
                            tempHumidityChart.data.datasets[0].data.shift();
                            tempHumidityChart.data.datasets[1].data.shift();
                        }

                        tempHumidityChart.data.labels.push('');
                        if (tempHumidityChart.data.labels.length > maxDataPoints) {
                            tempHumidityChart.data.labels.shift();
                        }

                        tempHumidityChart.update();
                    } else {
                        const ctx = document.getElementById('tempHumidityChart').getContext('2d');
                        tempHumidityChart = new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: [''],
                                datasets: [
                                    {
                                        label: `Temperature (${temperatureUnit})`,
                                        data: [temp],
                                        borderColor: 'red',
                                        fill: false
    
                                    },
                                    {
                                        label: 'Humidity (%)',
                                        data: [humidity],
                                        borderColor: 'blue',
                                        fill: false
                                    }
                                ]
                            },
                            options: {
                                responsive: true,
                                scales: {
                                    x: {
                                        title: {
                                            display: true,
                                            text: 'Time'
                                        }
                                    },
                                    y: {
                                        title: {
                                            display: true,
                                            text: 'Value'
                                        }
                                    }
                                }
                            }
                        });
                    }
                })
                .catch(error => {
                    console.error('Error fetching the data:', error);
                });
        }

        function toggleTemperatureUnit() {
            switch (temperatureUnit) {
                case 'C':
                    temperatureUnit = 'F';
                    document.getElementById('toggleUnitButton').textContent = 'Switch to Kelvin';
                    break;
                case 'F':
                    temperatureUnit = 'K';
                    document.getElementById('toggleUnitButton').textContent = 'Switch to Celsius';
                    break;
                case 'K':
                    temperatureUnit = 'C';
                    document.getElementById('toggleUnitButton').textContent = 'Switch to Fahrenheit';
                    break;
            }
            fetchDataAndUpdateChart();
        }

        fetchDataAndUpdateChart();
        setInterval(fetchDataAndUpdateChart, 1000);
        document.getElementById('toggleUnitButton').addEventListener('click', toggleTemperatureUnit);
    </script>
</body>
</html>
