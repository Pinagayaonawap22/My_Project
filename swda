import RPi.GPIO as GPIO
import time
from flask import Flask, jsonify


GPIO.setmode(GPIO.BCM)
buzzerPin = 21
TRigpin = 20  
Echopin = 16  

GPIO.setup(buzzerPin, GPIO.OUT)
GPIO.setup(TRigpin, GPIO.OUT)
GPIO.setup(Echopin, GPIO.IN)

app = Flask(__name__)
 
def buzzer_on():
    GPIO.output(buzzerPin,GPIO.HIGH)
    
def buzzer_off():
    GPIO.output(buzzerPin, GPIO.LOW)
    
def buzzer_sensor(duration):
    GPIO.output(buzzerPin, GPIO.HIGH)
    time.sleep(duration)
    GPIO.output(buzzerPin, GPIO.LOW)

def measure_distance():
    GPIO.output(TRigpin, False)
    time.sleep(2)

    GPIO.output(TRigpin, True)
    time.sleep(0.00001)
    GPIO.output(TRigpin, False)


    while GPIO.input(Echopin) == 0:
        pulse_start = time.time()

    while GPIO.input(Echopin) == 1:
        pulse_end = time.time()

    pulse_duration = pulse_end - pulse_start
    distance = pulse_duration * 17150  

    distance = round(distance, 2) 

    if distance <= 7:
        buzzer_sensor(1)
    else:
        buzzer_off()
    
    return distance

@app.route('/distance', methods=['GET'])
def get_distance():
    distance = measure_distance()
    return jsonify({'distance': distance})

if __name__ == '__main__':
    try:
        app.run(host='0.0.0.0', port=5000, debug=True)
    except KeyboardInterrupt:
        print("Sensor data stop")
        GPIO.cleanup()
